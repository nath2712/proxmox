<?php
namespace controllers\crud\datas;

use models\Groupe;
use models\User_;
use models\Vm;
use Ubiquity\controllers\crud\CRUDDatas;
use Ubiquity\orm\DAO;
use Ubiquity\utils\base\UArray;
use Ubiquity\utils\http\USession;
use Ubiquity\utils\models\UArrayModels;

/**
  * Class HubDatas
  */
class HubDatas extends CRUDDatas{
	//use override/implement Methods

    public function display($modal = "no", $ids = "")
    {

        parent::display($modal, $ids); // TODO: Change the autogenerated stub


    }
    public function _getInstancesFilter(string $model): string
    {


        //var_dump($user->getRole());

        $user=USession::get('activeUser');
        $user=DAO::getById(User_::class,$user->getId(),['groupes']);
        $groupes=$user->getGroupes();
        $ids=UArrayModels::asArrayProperties($groupes,['id']);

        if(isset($user) && $model==Vm::class){
            if ( $user->getRole()== "@Etudiant") {
                var_dump('hello1');
                if (count($ids)>0) {
                    var_dump('hello2');
                    return 'idUser=' . $user->getID() . ' OR idGroupe in (' . implode(',', $ids[0]) . ')';
                }
                else {
                    var_dump('hello3');
                    return 'id=1';
                }
            }
            else if ( $user->getRole()== "prof") {
                return '1=1';
            }
            else {
                return '1=1';

            }

        }
        if(isset($user) && $model==User_::class){
            //$ids=UArrayModels::asArrayProperties($groupes,['name']);
            if ( $user->getRole()== "Etudiant") {
                return 'id='.$user->getID() ;
            }
            else if ( $user->getRole()== "prof") {
                return '1=1';
            }
            else {
                return '1=1';

            }

        }
        if(isset($user) && $model==Groupe::class){
            //$ids=UArrayModels::asArrayProperties($groupes,['name']);
            if ( $user->getRole()== "Etudiant") {
                return 'id in ('.implode(',',$ids[0]).')' ;
            }
            else if ( $user->getRole()== "prof") {
                return '1=1';
            }
            else {
                return '1=1';

            }

        }
        return parent::_getInstancesFilter($model); // TODO: Change the autogenerated stub
    }

    public function getFieldNames(string $model): array
    {
        $fields= parent::getFieldNames($model);
        if($model==User_::class){
            $fields[]='serveurs';
            $fields[]='groupes';
        }
        return UArray::remove($fields,['id','password','User_']);
    }

    public function getFormFieldNames(string $model, $instance): array
    {
        $fields= parent::getFormFieldNames($model,$instance);
        return UArray::remove($fields,['id','password','idUser']);
    }


}
