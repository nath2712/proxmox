<?php
namespace controllers\crud\datas;

use models\User_;
use models\Vm;
use Ubiquity\controllers\crud\CRUDDatas;
use Ubiquity\orm\DAO;
use Ubiquity\utils\base\UArray;
use Ubiquity\utils\http\USession;
use Ubiquity\utils\models\UArrayModels;

/**
  * Class HubDatas
  */
class HubDatas extends CRUDDatas{
	//use override/implement Methods
    public function _getInstancesFilter(string $model): string
    {


        //var_dump($user->getRole());

        $user=USession::get('activeUser');
        $user=DAO::getById(User_::class,$user->getId(),['groupes']);
        $groupes=$user->getGroupes();
        $ids=UArrayModels::asArrayProperties($groupes,['id']);
        if(isset($user) && $model==Vm::class){
            if ( $user->getRole()== "Etudiant") {
                return 'idUser='.$user->getID().' OR idGroupe in ('.implode(',',$ids[0]).')' ;
            }
            else if ( $user->getRole()== "prof") {
                return '1=1';
            }
            else {
                return '1=1';

            }

        }
        return parent::_getInstancesFilter($model); // TODO: Change the autogenerated stub
    }

    public function getFieldNames(string $model): array
    {
        $fields= parent::getFieldNames($model);
        if($model==User_::class){
            $fields[]='serveurs';
            $fields[]='groupes';
        }
        return UArray::remove($fields,['id','password']);
    }

    public function getFormFieldNames(string $model, $instance): array
    {
        $fields= parent::getFormFieldNames($model,$instance);
        return UArray::remove($fields,['id','password']);
    }


}
